{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"java基础","date":"2020-10-09T01:53:28.692Z","updated":"2020-10-09T02:13:05.916Z","comments":true,"path":"2020/10/09/java基础/","link":"","permalink":"http://example.com/2020/10/09/java%E5%9F%BA%E7%A1%80/","excerpt":"","text":"java基础目录1.基本数据类型 1.基本数据类型byte： byte 数据类型是8位、有符号的，以二进制补码表示的整数； 最小值是 -128（-2^7）； 最大值是 127（2^7-1）； 默认值是 0； byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一； 例子：byte a = 100，byte b = -50。 short： short 数据类型是 16 位、有符号的以二进制补码表示的整数 最小值是 -32768（-2^15）； 最大值是 32767（2^15 - 1）； Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一； 默认值是 0； 例子：short s = 1000，short r = -20000。 int： int 数据类型是32位、有符号的以二进制补码表示的整数； 最小值是 -2,147,483,648（-2^31）； 最大值是 2,147,483,647（2^31 - 1）； 一般地整型变量默认为 int 类型； 默认值是 0 ； 例子：int a = 100000, int b = -200000。 long： long 数据类型是 64 位、有符号的以二进制补码表示的整数； 最小值是 -9,223,372,036,854,775,808（-2^63）； 最大值是 9,223,372,036,854,775,807（2^63 -1）； 这种类型主要使用在需要比较大整数的系统上； 默认值是 0L； 例子： long a = 100000L，Long b = -200000L。“L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。 float： float 数据类型是单精度、32位、符合IEEE 754标准的浮点数； float 在储存大型浮点数组的时候可节省内存空间； 默认值是 0.0f； 浮点数不能用来表示精确的值，如货币； 例子：float f1 = 234.5f。 double： double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数； 浮点数的默认类型为double类型； double类型同样不能表示精确的值，如货币； 默认值是 0.0d； 例子：double d1 = 123.4。 boolean： boolean数据类型表示一位的信息； 只有两个取值：true 和 false； 这种类型只作为一种标志来记录 true/false 情况； 默认值是 false； 例子：boolean one = true。 char： char类型是一个单一的 16 位 Unicode 字符； 最小值是 \\u0000（即为0）； 最大值是 \\uffff（即为65,535）； char 数据类型可以储存任何字符； 例子：char letter = ‘A’;。","categories":[],"tags":[]},{"title":"创建博客的过程","slug":"我的第一篇博客文章","date":"2020-10-08T15:30:19.000Z","updated":"2020-10-08T17:54:25.870Z","comments":true,"path":"2020/10/08/我的第一篇博客文章/","link":"","permalink":"http://example.com/2020/10/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"第一章第一步_下载/安装node.js下载node.js 并安装 下载地址https://nodejs.org 第二步_下载/安装git1.下载并安装gitcnpm下载地址https://git-scm.com/ 2.设置用户名 邮箱git config –global user.name 你的目标用户名； git config –global user.email 你的目标邮箱名 第三步_使用cmd搭建本地博客1.创建一个自定义的目录 2.用cmd进入该目录 npm install -g cnpm –registry=http://registry.npm.taobao.org 安装淘宝的cnpm管理器 cnpm -v 查看版本信息 cnpm install -g hexo-cli #安装hexo框架 hexo -v #查看hexo版本 mkdir blog cd blog 创建blog目录,并进入 hexo init #生成博客 初始化博客 hexo s #启动本地博客服务 http://localhost:4000/ #本地访问地址 第四步_上传到远端(以github上传为例子) 参考文献www.4399.com","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-10-08T15:22:32.575Z","updated":"2020-10-08T15:22:32.575Z","comments":true,"path":"2020/10/08/hello-world/","link":"","permalink":"http://example.com/2020/10/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}